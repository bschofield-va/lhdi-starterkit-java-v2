/**
 * Provides docker container settings
 */

plugins {
    id 'org.flywaydb.flyway'
    id 'starter.java.container-conventions'
    id 'starter.java.build-utils-conventions'
}

docker {
    copySpec.from("src/main/resources").into(".")
}

dockerRun {
    image "${dockerRegistry}/${rootProject.name}-flyway"
    env 'FLYWAY_DEFAULT_SCHEMA': getEnvOrDefault('DB_NAME', 'facilityvisit'),
            'FLYWAY_URL': "jdbc:${getEnvOrDefault('DB_SERVER', 'postgresql')}://${getEnvOrDefault('DB_HOST', 'localhost')}:5432/${getEnvOrDefault('DB_NAME', 'facilityvisit')}?user=${getEnvOrDefault('DB_ROOT_USER', 'facilityvisit_flyway')}&password=${getEnvOrDefault('DB_ROOT_USER_PASSWORD', 'not-the-user-password')}",
            'FLYWAY_USER': getEnvOrDefault('DB_ROOT_USER', 'facilityvisit_flyway'),
            'FLYWAY_PLACEHOLDERS_USERNAME': getEnvOrDefault('DB_USER', 'facilityvisit_user'),
            'FLYWAY_PLACEHOLDERS_SERVICENAME': getEnvOrDefault('DB_SERVICE', 'facilityvisit_service'),
            'FLYWAY_PLACEHOLDERS_ADMINNAME': getEnvOrDefault('DB_ADMIN', 'facilityvisit_admin'),
            'FLYWAY_PLACEHOLDERS_DBNAME': getEnvOrDefault('DB_NAME', 'facilityvisit'),
            'FLYWAY_PLACEHOLDERS_SCHEMANAME': getEnvOrDefault('DB_SCHEMA', 'facilityvisit'),
            'FLYWAY_PLACEHOLDERS_USERPASSWORD': getEnvOrDefault('DB_USER_PASSWORD', 'also-not-the-user-password'),
            'FLYWAY_PLACEHOLDERS_SERVICEPASSWORD': getEnvOrDefault('DB_SERVICE_PASSWORD', 'also-not-the-service-password'),
            'FLYWAY_PLACEHOLDERS_ADMINPASSWORD': getEnvOrDefault('DB_ADMIN_PASSWORD', 'also-not-the-admin-password')
}


configurations {
    flywayMigration
}

dependencies {
    flywayMigration platform("gov.va.starter:starter-bom:${starter_boot_version}")
    flywayMigration "org.postgresql:postgresql"
}

flyway {
    url = 'jdbc:postgresql://facilityvisit_flyway:not-the-password@localhost:5432/facilityvisit'
    user = 'facilityvisit_flyway'
    password = 'not-the-password'
    locations = ["filesystem:${project.buildDir}/docker/database/migrations"]
    placeholders = [
            'username': 'facilityvisit_user',
            'servicename': 'facilityvisit_service',
            'adminname': 'facilityvisit_admin',
            'dbname': 'facilityvisit',
            'schemaname': 'facilityvisit',
            'userpassword': 'also-not-the-user-password',
            'servicepassword': 'also-not-the-service-password',
            'adminpassword': 'also-not-the-admin-password'
    ]
    configurations = [ 'flywayMigration' ]
}
